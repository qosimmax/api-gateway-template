// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	app "api-gateway-template/app"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// DataFetcher is an autogenerated mock type for the DataFetcher type
type DataFetcher struct {
	mock.Mock
}

// GetExampleData provides a mock function with given fields: ctx
func (_m *DataFetcher) GetExampleData(ctx context.Context) (*app.Data, error) {
	ret := _m.Called(ctx)

	var r0 *app.Data
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (*app.Data, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) *app.Data); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*app.Data)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewDataFetcher creates a new instance of DataFetcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDataFetcher(t interface {
	mock.TestingT
	Cleanup(func())
}) *DataFetcher {
	mock := &DataFetcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
